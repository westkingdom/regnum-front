steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['version']


  # 1. Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA',
        '.',
      ]

  # 2. Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA',
      ]

  # 3. Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        '${_SERVICE_NAME}',
        '--image',
        '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA',
        '--region',
        '${_REGION}',
        '--allow-unauthenticated',
        # Mount secrets as files using a single --set-secrets flag
        # Format: --set-secrets=[MOUNT_PATH]=[SECRET_NAME]:[VERSION],[MOUNT_PATH2]=[SECRET_NAME2]:[VERSION2]...
        '--set-secrets=/secrets/service_account.json=regnum-service-account-key:latest,/secrets/google_credentials.json=regnum-google-credentials:latest',
        # Optional: Set impersonated user via env var
        '--set-env-vars=IMPERSONATED_USER_EMAIL=webminister@westkingdom.org',
        '--platform',
        'managed',
      ]

# Store the image name in Artifact Registry
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'

# Define substitutions (variables)
substitutions:
  _ARTIFACT_REPO_NAME: 'regnum-front' # e.g., regnum-repo
  _SERVICE_NAME: 'regnum-front' # e.g., regnum-front
  _AR_HOSTNAME: 'us-west1-docker.pkg.dev'
  _AR_PROJECT_ID: 'regnum-front' # e
  _AR_REPOSITORY: 'cloud-run-source-deploy'
  _AR_SERVICE: 'regnum-front'
  _PLATFORM: 'managed'
  _REGION: 'us-west1'
 # Use 'managed' for serverless Cloud Run
  _IMAGE_NAME: '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
  _TRIGGER_ID: 'd4a0f027-7719-4b48-8861-a20ef2b4c200' # e.g., d4a0f027-7719-4b48-8861-a20ef2b4c200

# Optional: Set timeout for the build
timeout: '1200s' # 20 minutes
serviceAccount: 'projects/westkingdom-primary/serviceAccounts/85382560394-compute@developer.gserviceaccount.com'
options: 
  logging: 'CLOUD_LOGGING_ONLY'